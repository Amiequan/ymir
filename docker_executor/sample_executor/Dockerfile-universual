# a docker file for an sample training / mining / infer executor

# to build semantic segmentation docker image:
# docker build -f Dockerfile-universual -t sample-semseg-tmi:test .
# to build instance segmentation docker image:
# docker build -f Dockerfile-universual --build-arg OBJECT_TYPE=4 -t sample-insseg-tmi:test .
# to build multimodal docker image:
# docker build -f Dockerfile-universual --build-arg OBJECT_TYPE=50 -t sample-multimodal-tmi:test .
# to build universual docker image:
# docker build -f Dockerfile-universual --build-arg OBJECT_TYPE="[3, 4, 50]" -t sample-universual-tmi:test .

FROM python:3.8.13-alpine

# Add bash
RUN apk add bash
# Required to build numpy wheel
RUN apk add g++

COPY ./ymir_exc/requirements.txt ./
RUN pip3 install -r requirements.txt

# tmi framework and your app
COPY universual-app /app
RUN mkdir /img-man
COPY universual-app/*-template.yaml /img-man/
ARG OBJECT_TYPE=3
RUN echo object_type = $OBJECT_TYPE > /img-man/manifest.yaml
COPY ymir_exc/ymir_exc /app/ymir_exc

# dependencies: write other dependencies here (pytorch, mxnet, tensorboard-x, etc.)

# entry point for your app
# the whole docker image will be started with `nvidia-docker run <other options> <docker-image-name>`
# and this command will run automatically
RUN echo "python /app/start.py" > /usr/bin/start.sh
CMD bash /usr/bin/start.sh
